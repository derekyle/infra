version: '3.4'

volumes:
  postgres-data:
services:

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    ports:
      - 13378:80
    volumes:
      - /storage/data/media/audiobooks:/audiobooks
      - /storage/data/media/ebooks:/ebooks
      - /config/audiobookshelf/config:/config
      - /config/audiobookshelf/metadata:/metadata
    environment:
      - TZ=America/Los_Angeles
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.abs.rule=Host(`abs.dc5.in`)"
      - "traefik.http.routers.abs.entrypoints=websecure"
      - "traefik.http.routers.abs.tls.certresolver=myresolver"
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  watchlistarr:
    image: nylonee/watchlistarr
    environment:
      - SONARR_API_KEY
      - SONARR_BASE_URL=sonarr:8989
      - RADARR_API_KEY
      - RADARR_BASE_URL=radarr:7878
      - PLEX_TOKEN
    volumes:
      - /config/watchlistarr:/app/config
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  
  filemover:
    container_name: filemover
    image: derekyle/alpine-rsync:latest
    restart: unless-stopped
    environment:
      - SIZE_LIMIT=1750 #in GB maximum size before script starts moving files
      - TARGET_SIZE=1700 #in GB script moves files until this size is reached
    volumes:
      - /storage-fast:/storage-fast
      - /storage-slow:/storage-slow
      - /config/filemover/move.sh:/move.sh
    command: sh "/move.sh"
    logging:
      options:
        max-size: "1m"
        max-file: "1"
    
  frigate:
    container_name: frigate
    privileged: true # this may not be necessary for all setups
    restart: unless-stopped
    image: ghcr.io/blakeblackshear/frigate:stable
    shm_size: "64mb" # update for your cameras based on calculation above
    devices:
      - /dev/bus/usb:/dev/bus/usb # passes the USB Coral, needs to be modified for other versions
      # - /dev/apex_0:/dev/apex_0 # passes a PCIe Coral, follow driver instructions here https://coral.ai/docs/m2/get-started/#2a-on-linux
      -  /dev/dri:/dev/dri # for intel hwaccel, needs to be updated for your hardware
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /config/frigate:/config
      - /storage/security:/media/frigate
    tmpfs: /tmp/cache
    ports:
      - "5000:5000"
      - "1935:1935" # RTMP feeds
    environment:
      - FRIGATE_RTSP_PASSWORD
      - FRIGATE_FRONT_DOOR_PW=derekyle:AnW51Kehd0
      - FRIGATE_BABY_CAM_PW=derekyle:oaGe884hcc
      - FRIGATE_PARKING_CAM_PW=admin:WWGVkkAdLgc5s1

  deepstack:
    container_name: deepstack
    restart: unless-stopped
    image: deepquestai/deepstack
    ports:
      - '6000:5000'
    environment:
      - VISION-FACE=True
      - MODE=Medium
      # - API-KEY="enF492jtWfksjeEK29n3398"
    volumes:
      - /config/deepstack/datastore:/datastore
  
  double-take:
    container_name: double-take
    image: jakowenko/double-take
    restart: unless-stopped
    volumes:
      - /config/double-take:/.storage
    ports:
      - 3000:3000
  compreface-postgres-db:
    image: ${registry}compreface-postgres-db:${POSTGRES_VERSION}
    restart: always
    container_name: "compreface-postgres-db"
    environment:
      - POSTGRES_USER=${postgres_username}
      - POSTGRES_PASSWORD=${postgres_password}
      - POSTGRES_DB=${postgres_db}
    volumes:
      - /config/compreface/postgres-data:/var/lib/postgresql/data

  compreface-admin:
    restart: always
    image: ${registry}compreface-admin:${ADMIN_VERSION}
    container_name: "compreface-admin"
    environment:
      - POSTGRES_USER=${postgres_username}
      - POSTGRES_PASSWORD=${postgres_password}
      - POSTGRES_URL=jdbc:postgresql://${postgres_domain}:${postgres_port}/${postgres_db}
      - SPRING_PROFILES_ACTIVE=dev
      - ENABLE_EMAIL_SERVER=${enable_email_server}
      - EMAIL_HOST=${email_host}
      - EMAIL_USERNAME=${email_username}
      - EMAIL_FROM=${email_from}
      - EMAIL_PASSWORD=${email_password}
      - ADMIN_JAVA_OPTS=${compreface_admin_java_options}
      - MAX_FILE_SIZE=${max_file_size}
      - MAX_REQUEST_SIZE=${max_request_size}B
    depends_on:
      - compreface-postgres-db
      - compreface-api

  compreface-api:
    restart: always
    image: ${registry}compreface-api:${API_VERSION}
    container_name: "compreface-api"
    depends_on:
      - compreface-postgres-db
    environment:
      - POSTGRES_USER=${postgres_username}
      - POSTGRES_PASSWORD=${postgres_password}
      - POSTGRES_URL=jdbc:postgresql://${postgres_domain}:${postgres_port}/${postgres_db}
      - SPRING_PROFILES_ACTIVE=dev
      - API_JAVA_OPTS=${compreface_api_java_options}
      - SAVE_IMAGES_TO_DB=${save_images_to_db}
      - MAX_FILE_SIZE=${max_file_size}
      - MAX_REQUEST_SIZE=${max_request_size}B
      - CONNECTION_TIMEOUT=${connection_timeout:-10000}
      - READ_TIMEOUT=${read_timeout:-60000}

  compreface-fe:
    restart: always
    image: ${registry}compreface-fe:${FE_VERSION}
    container_name: "compreface-ui"
    ports:
      - "8000:80"
    depends_on:
      - compreface-api
      - compreface-admin
    environment:
      - CLIENT_MAX_BODY_SIZE=${max_request_size}
      - PROXY_READ_TIMEOUT=${read_timeout:-60000}ms
      - PROXY_CONNECT_TIMEOUT=${connection_timeout:-10000}ms

  compreface-core:
    restart: always
    image: ${registry}compreface-core:${CORE_VERSION}
    container_name: "compreface-core"
    environment:
      - ML_PORT=3000
      - UWSGI_PROCESSES=${uwsgi_processes:-2}
      - UWSGI_THREADS=${uwsgi_threads:-1}

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    # network_mode: host
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=latest
      - UMASK=022
      # - PLEX_CLAIM=claim-GUjXpgvoEXxRM6j1m7q-
    volumes:
      - /config/plex:/config:rw,z
      - /storage/data/media/tv:/tv:rw,z
      - /storage/data/media/movies:/movies:rw,z
      - /storage/data/media/music:/music:rw,z
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 32400:32400
      - 1900:1900/udp
      - 3005:3005
      # - 5353:5353/udp
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--global.sendanonymoususage=false"
      - "--api.insecure=true"
      - "--serversTransport.insecureSkipVerify=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/etc/traefik/rules.yaml"
      - "--entrypoints.web.address=:80"
      # forces redirect to https
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=the.derek.carr@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8484:8080"
    volumes:
      - "/config/letsencrypt:/letsencrypt"
      - "/config/traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  qbittorrent:
    image: linuxserver/qbittorrent:4.1.9.99201911190849-6738-0b055d8ubuntu18.04.1-ls54
    container_name: qbittorrent
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8080
      - UMASK=022
    volumes:
      - /config/qbittorrent:/config:rw,z
      - /storage/data/torrents:/data/torrents:rw,z
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qb.rule=Host(`qb.dc5.in`)"
      - "traefik.http.routers.qb.entrypoints=websecure"
      - "traefik.http.routers.qb.tls.certresolver=myresolver"
      - "traefik.http.routers.qbittorrent.tls.domains[0].main=qb.dc5.in"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
      # - "traefik.port=8080"
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - UMASK=022
    volumes:
      - /config/sonarr:/config
      - /storage/data:/data
    ports:
      - 8989:8989
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.dc5.in`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - UMASK=022
    volumes:
      - /config/radarr:/config:rw,z
      - /storage/data:/data:rw,z
    ports:
      - 7878:7878
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.dc5.in`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /config/lidarr:/config
      - /storage/data:/data
    ports:
      - 8686:8686
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.dc5.in`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls.certresolver=myresolver"
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /config/tautulli:/config:rw,z
    ports:
      - 8181:8181
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.dc5.in`)"
      - "traefik.http.routers.tautulli.entrypoints=websecure"
      - "traefik.http.routers.tautulli.tls.certresolver=myresolver"
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  
  ombi:
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      # - BASE_URL=/ombi #optional
    volumes:
      - /path/to/appdata/config:/config
    ports:
      - 3579:3579
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ombi.rule=Host(`ombi.dc5.in`)"
      - "traefik.http.routers.ombi.entrypoints=websecure"
      - "traefik.http.routers.ombi.tls.certresolver=myresolver"
    restart: unless-stopped

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - UMASK=022
    volumes:
      - /config/nzbget:/config:rw,z
      - /storage/data/usenet:/data/usenet:rw,z
    ports:
      - 6789:6789
    restart: unless-stopped
    labels:
      # - "traefik.enable=true"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.dc5.in`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.nzbget.tls.certresolver=myresolver"
      # - "traefik.http.services.nzbget.loadbalancer.server.port=6789"
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  nextcloud-db:
    image: lscr.io/linuxserver/mariadb:latest
    container_name: nextcloud-db
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD
      - TZ=America/Los_Angeles
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD
      # - REMOTE_SQL=http://URL1/your.sql,https://URL2/your.sql #optional
    volumes:
      - /config/nextcloud/database:/config
    # ports:
    #   - 3306:3306
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:28.0.4
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - MYSQL_PASSWORD
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=nextcloud-db
      - NEXTCLOUD_ADMIN_USER
      - NEXTCLOUD_ADMIN_PASSWORD
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PASSWORD=${REDIS_PASSWORD}
      # - NEXTCLOUD_TRUSTED_DOMAIN=cloud.dc5.in
      # - TRUSTED_PROXIES=172.18.0.0/16
      # - OVERWRITEPROTOCOL=https
    volumes:
      - /config/nextcloud/config:/config
      - /storage/Backup/nextcloud_data:/data
    # ports:
    #   - 9999:443
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=HostHeader(`cloud.dc5.in`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=myresolver"
      ## HTTP Services
      # - "traefik.http.routers.nextcloud.service=nextcloud"
      - traefik.http.routers.nextcloud.middlewares=nextcloud,nextcloud_redirect
      - traefik.http.middlewares.nextcloud.headers.customFrameOptionsValue=ALLOW-FROM https://cloud.dc5.in
      - traefik.http.middlewares.nextcloud.headers.contentSecurityPolicy=frame-ancestors 'self' dc5.in *.dc5.in
      - traefik.http.middlewares.nextcloud.headers.stsSeconds=155520011
      - traefik.http.middlewares.nextcloud.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.nextcloud.headers.stsPreload=true
      - traefik.http.middlewares.nextcloud_redirect.redirectregex.regex=/.well-known/(card|cal)dav
      - traefik.http.middlewares.nextcloud_redirect.redirectregex.replacement=/remote.php/dav/
      # - traefik.http.services.nextcloud.loadbalancer.server.scheme=https
      # - traefik.http.services.nextcloud.loadbalancer.server.port=443
    logging:
      options:
        max-size: "1m"
        max-file: "1"

      

  nextcloud-redis:
    image: 'bitnami/redis:latest'
    container_name: nextcloud-redis
    environment:
      - REDIS_PASSWORD
    logging:
      options:
        max-size: "1m"
        max-file: "1"



  lazylibrarian:
    image: lscr.io/linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - DOCKER_MODS=linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg #optional
    volumes:
      - /config/lazylibrarian:/config
      - /storage/Downloads/LazyLibrarian:/downloads
      - /storage/Books:/books #optional
    ports:
      - 5299:5299
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.librarian.rule=Host(`librarian.dc5.in`)"
      - "traefik.http.routers.librarian.entrypoints=websecure"
      - "traefik.http.routers.librarian.tls.certresolver=myresolver"
  
  # readarr:
  #   image: lscr.io/linuxserver/readarr:develop
  #   container_name: readarr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=America/Los_Angeles
  #   volumes:
  #     - /config/readarr:/config
  #     - /storage/data:/books #optional
  #     - /path/to/downloadclient-downloads:/downloads #optional
  #   ports:
  #     - 8787:8787
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.readarr.rule=Host(`readarr.dc5.in`)"
  #     - "traefik.http.routers.readarr.entrypoints=websecure"
  #     - "traefik.http.routers.readarr.tls.certresolver=myresolver"
  
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    ports:
      - 8086:8086
    volumes:
      - /config/influxdb/data:/var/lib/influxdb2
      - /config/influxdb/config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=telegraf
      - DOCKER_INFLUXDB_INIT_PASSWORD
      - DOCKER_INFLUXDB_INIT_BUCKET=telegraf
      - DOCKER_INFLUXDB_INIT_ORG=baremetal
      # - INFLUXDB_ADMIN_ENABLED=true
      # - INFLUXDB_ADMIN_USER=admin
      # - INFLUXDB_ADMIN_PASSWORD
    logging:
      options:
        max-size: "1m"
        max-file: "1"

# docker run --rm -i -v /mnt/Z3025Q8K/PoolPart.Z3025Q8K:/sourcedisk -v /temppool:/destinationpool instrumentisto/rsync-ssh rsync --archive --info=progress2 /sourcedisk/ /destinationpool
#   transfer1:
#     image: instrumentisto/rsync-ssh
#     container_name: transfer1
#     volumes:
#       - /mnt/2SG53JXJ/PoolPart.2SG53JXJ:/sourcedisk
#       - /temppool:/destinationpool
#     entrypoint: rsync
#     command:
#       - --archive 
#       - --progress
#       - --hard-links
#       - /sourcedisk/
#       - /destinationpool
#     logging:
#       options:
#         max-size: "1m"
#         max-file: "1"