version: "2.1"

services:
  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    # network_mode: host
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=latest
      - UMASK=022
      # - PLEX_CLAIM=claim-GUjXpgvoEXxRM6j1m7q-
    volumes:
      - /config/plex:/config:rw,z
      - /storage/data/media/tv:/tv:rw,z
      - /storage/data/media/movies:/movies:rw,z
      - /storage/data/media/music:/music:rw,z
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 32400:32400
      - 1900:1900/udp
      - 3005:3005
      # - 5353:5353/udp
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--global.sendanonymoususage=false"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/etc/traefik/rules.yaml"
      - "--entrypoints.web.address=:80"
      # forces redirect to https
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=the.derek.carr@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8484:8080"
    volumes:
      - "/config/letsencrypt:/letsencrypt"
      - "/config/traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  qbittorrent:
    image: linuxserver/qbittorrent:4.1.9.99201911190849-6738-0b055d8ubuntu18.04.1-ls54
    container_name: qbittorrent
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8080
      - UMASK=022
    volumes:
      - /config/qbittorrent:/config:rw,z
      - /storage/data/torrents:/data/torrents:rw,z
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qb.rule=Host(`qb.dc5.in`)"
      - "traefik.http.routers.qb.entrypoints=websecure"
      - "traefik.http.routers.qb.tls.certresolver=myresolver"
      - "traefik.http.routers.qbittorrent.tls.domains[0].main=qb.dc5.in"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
      # - "traefik.port=8080"
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - UMASK=022
    volumes:
      - /config/sonarr:/config
      - /storage/data:/data
    ports:
      - 8989:8989
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.dc5.in`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  
  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - UMASK=022
    volumes:
      - /config/radarr:/config:rw,z
      - /storage/data:/data:rw,z
    ports:
      - 7878:7878
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.dc5.in`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  lidarr:
    image: ghcr.io/linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /config/lidarr:/config
      - /storage/data:/data
    ports:
      - 8686:8686
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.dc5.in`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls.certresolver=myresolver"
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  tautulli:
    image: ghcr.io/linuxserver/tautulli
    container_name: tautulli
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /config/tautulli:/config:rw,z
    ports:
      - 8181:8181
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.dc5.in`)"
      - "traefik.http.routers.tautulli.entrypoints=websecure"
      - "traefik.http.routers.tautulli.tls.certresolver=myresolver"
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  nzbget:
    image: ghcr.io/linuxserver/nzbget
    container_name: nzbget
    # user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - UMASK=022
    volumes:
      - /config/nzbget:/config:rw,z
      - /storage/data/usenet:/data/usenet:rw,z
    ports:
      - 6789:6789
    restart: unless-stopped
    labels:
      # - "traefik.enable=true"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.dc5.in`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.nzbget.tls.certresolver=myresolver"
      # - "traefik.http.services.nzbget.loadbalancer.server.port=6789"
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  nextcloud-db:
    image: ghcr.io/linuxserver/mariadb
    container_name: nextcloud-db
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD
      - TZ=America/Los_Angeles
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD
      # - REMOTE_SQL=http://URL1/your.sql,https://URL2/your.sql #optional
    volumes:
      - /config/nextcloud/database:/config
    # ports:
    #   - 3306:3306
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  nextcloud:
    image: ghcr.io/linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - /config/nextcloud/config:/config
      - /storage/Backup/nextcloud_data:/data
    # ports:
    #   - 9999:443
    restart: unless-stopped
    environment:
      - MYSQL_PASSWORD
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=nextcloud-db
      - NEXTCLOUD_ADMIN_USER
      - NEXTCLOUD_ADMIN_PASSWORD
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PASSWORD=${REDIS_PASSWORD}
      # - NEXTCLOUD_TRUSTED_DOMAIN=cloud.dc5.in
      # - TRUSTED_PROXIES=172.18.0.0/16
      # - OVERWRITEPROTOCOL=https
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=HostHeader(`cloud.dc5.in`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=myresolver"
      ## HTTP Services
      # - "traefik.http.routers.nextcloud.service=nextcloud"
      - traefik.http.routers.nextcloud.middlewares=nextcloud,nextcloud_redirect
      - traefik.http.middlewares.nextcloud.headers.customFrameOptionsValue=ALLOW-FROM https://cloud.dc5.in
      - traefik.http.middlewares.nextcloud.headers.contentSecurityPolicy=frame-ancestors 'self' dc5.in *.dc5.in
      - traefik.http.middlewares.nextcloud.headers.stsSeconds=155520011
      - traefik.http.middlewares.nextcloud.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.nextcloud.headers.stsPreload=true
      - traefik.http.middlewares.nextcloud_redirect.redirectregex.regex=/.well-known/(card|cal)dav
      - traefik.http.middlewares.nextcloud_redirect.redirectregex.replacement=/remote.php/dav/
      # - traefik.http.services.nextcloud.loadbalancer.server.scheme=https
      # - traefik.http.services.nextcloud.loadbalancer.server.port=443
    logging:
      options:
        max-size: "1m"
        max-file: "1"

      

  nextcloud-redis:
    image: 'bitnami/redis:latest'
    container_name: nextcloud-redis
    environment:
      - REDIS_PASSWORD
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  
  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   # user: "1000"
  #   ports:
  #     - 3001:3000
  #   volumes:
  #     - /config/grafana:/var/lib/grafana
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.grafana.rule=Host(`grafana.dc5.in`)"
  #     - "traefik.http.routers.grafana.entrypoints=websecure"
  #     - "traefik.http.routers.grafana.tls.certresolver=myresolver"
  #   logging:
  #     options:
  #       max-size: "1m"

  # influxdb:
  #   image: influxdb:latest
  #   container_name: influxdb
  #   ports:
  #     - 8086:8086
  #   volumes:
  #     - /config/influxdb/data:/var/lib/influxdb
  #   restart: unless-stopped
  #   logging:
  #     options:
  #       max-size: "1m"
  
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    ports:
      - 8086:8086
    volumes:
      - /config/influxdb/data:/var/lib/influxdb2
      - /config/influxdb/config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=telegraf
      - DOCKER_INFLUXDB_INIT_PASSWORD
      - DOCKER_INFLUXDB_INIT_BUCKET=telegraf
      - DOCKER_INFLUXDB_INIT_ORG=baremetal
      # - INFLUXDB_ADMIN_ENABLED=true
      # - INFLUXDB_ADMIN_USER=admin
      # - INFLUXDB_ADMIN_PASSWORD
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  telegraf:
    image: telegraf
    container_name: telegraf
    privileged: true
    command:
      - /bin/bash
      - -c
      - |
        apt update
        apt install -y smartmontools nvme-cli
        telegraf
    restart: always
    # extra_hosts:
    #   - "influxdb:192.168.0.110"
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
      INFLUX_TOKEN: "${INFLUX_TOKEN}"
      HOST_MOUNT_PREFIX: /rootfs
    volumes:
      - /config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
      - /run/udev:/run/udev:ro
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  
