---
target_os: ubuntu
hostname_helios64: helios64

main_uid: "1000"
main_gid: "{{ main_uid }}"

# ferrarimarco.bash-aliases
bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' "}
  - { alias: "dstop", command: "docker stop `docker ps -aq`"}
  - { alias: "drm", command: "docker rm `docker ps -aq`"}
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml "}
  - { alias: "dcporph", command: "docker-compose -f ~/docker-compose.yml "}
  - { alias: "dprune", command: "docker image prune"}
  - { alias: "dprunesys", command: "docker system prune --all"}
  - { alias: "bashreload", command: "source ~/.bashrc && echo Bash config reloaded;"}
  - { alias: "ctop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock http://quay.io/vektorlab/ctop "}
  - { alias: "sshclear", command: "rm ~/.ssh/multiplex/* -f && echo SSH connection cache cleared;"}
  - { alias: "sshlist", command: "echo Currently open ssh connections && echo && l ~/.ssh/multiplex/"}


# ironicbadger.ansible_users
users:
  - username: "{{ main_username }}"
    github_username: ironicbadger
    name: "{{ main_username }}"
    groups: ["wheel", "docker"]
    uid: "{{ main_uid }}"
  - username: cat
    github_username: dropcat13
    name: cat
    groups: []
    uid: 1098
groups_to_create:
  - name: "{{ main_groupname }}"
    gid: "{{ main_gid }}"
  - name: wheel
  - name: docker

# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: fio
  - name: git
  - name: hddtemp
  - name: htop
  - name: iftop
  - name: iotop
  - name: lm-sensors
  - name: mc
  - name: mergerfs
  - name: mutt
  - name: ncdu
  - name: net-tools
  - name: nmap
  - name: openssh-server
  - name: python
  - name: sanoid
  - name: screen
  - name: ssh-import-id
  - name: smartmontools
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget
  - name: wireguard-tools
  - name: xfsprogs
  - name: zfsutils-linux

# ferrarimarco.bash-aliases
bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "drm", command: "docker rm `docker ps -aq`" }
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml --remove-orphans " }
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all" }
  - { alias: "dtop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop"}
  - { alias: "appdata", command: "cd /mnt/tank/appdata" }
  - { alias: "zspace", command: "zfs list -o space" }
  - { alias: "zsnap", command: "zfs list -t snapshot" }

# ktz-cartman
helios64_main_storage_path: /mnt/storage

extra_mountpoints:
  - { path: "{{ helios64_main_storage_path }}" }
  - { path: /opt, diskbyid: /dev/disk/by-id/ata-KINGSTON_SA400M8240G_50026B7282385203-part1, fs: ext4, opts: "defaults,discard" }
  # retired data disks
  #- { path: /mnt/retired.disk2, diskbyid: /dev/disk/by-id/ata-WDC_WD100EMAZ-00WJTA0_2YHV69AD-part1, fs: xfs, opts: defaults, content: false }
  #- { path: /mnt/retired.disk1, diskbyid: /dev/disk/by-id/ata-WDC_WD100EMAZ-00WJTA0_16G10VZZ-part1, fs: xfs, opts: defaults, content: false }

parity_disks:
  #- { path: /mnt/parity1, diskbyid: /dev/disk/by-id/ata-WDC_WD120EDAZ-11F3RA0_5PJHZW1F-part1, fs: ext4, opts: defaults, content: false }
  #- { path: /mnt/parity2, diskbyid: /dev/disk/by-id/ata-WDC_WD100EMAZ-00WJTA0_16G1016Z-part1, fs: xfs, opts: defaults, content: false }

data_disks:
  - { path: /mnt/disk1, diskbyid: /dev/disk/by-id/ata-ST8000DM004-2CX188_WCT0N54S-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk2, diskbyid: /dev/disk/by-id/ata-ST8000DM004-2CX188_WCT0NN0R-part1, fs: xfs, opts: defaults, content: false }
  #- { path: /mnt/disk3, diskbyid: /dev/disk/by-id/ata-HGST_HDN728080ALE604_R6GPPDTY-part1, fs: xfs, opts: defaults, content: true }

zfs_disks:
  # ata-WDC_WD100EMAZ-00WJTA0_16G10VZZ-part1
  # 

fstab_mergerfs:
  - { source: "/mnt/disk*:/mnt/tank/fuse", mountpoint: "{{ helios64_main_storage_path }}", fs: fuse.mergerfs, opts: "defaults,nonempty,allow_other,use_ino,cache.files=off,moveonenospc=true,dropcacheonclose=true,fsname=mergerfs" }  

snapraid_email_address: alexktz@gmail.com
snapraid_gmail_pass: "{{ snapraid_email_password }}"
snapraid_healthcheck_io_uuid: "{{ snapraid_healthcheck_secret }}"

# ktz-traefik
traefik_file_provider: true
traefik_enable_dashboard: false #defaults to false
traefik_insecure_transport: false #defaults to false

# ironicbadger.docker_compose_generator
appdata_path: /opt/appdata
primary_domain: al.ktz.me

containers:
###
  - service_name: traefik
    container_name: tr
    active: true
    image: traefik
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    extra_hosts:
      - host.docker.internal:172.17.0.1
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    volumes:
      - "{{ appdata_path }}/traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped
###
  - service_name: plex
    active: true
    image: linuxserver/plex
    network_mode: host
    volumes:
      - "{{ appdata_path }}/plex/config:/config"
      - "{{ helios64_main_storage_path }}:/data"
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: librespeed
    active: true
    image: linuxserver/librespeed
    ports:
      - 8008:80
    labels:
      - traefik.enable=true
      - traefik.http.routers.librespeed.rule=Host(`librespeed.ktz.me`)
      - traefik.http.routers.librespeed.entrypoints=websecure
      - traefik.http.routers.librespeed.tls.certresolver=cloudflare
      - traefik.http.services.librespeed.loadbalancer.server.port=80
    environment:
      - MODE=standalone
      - TELEMETRY=true
      - "PASSWORD={{ librespeed_password }}"
    include_global_env_vars: true
    restart: unless-stopped

## snapraid
snapraid_config_excludes:
  - "*.unrecoverable"
  - "/tmp/"
  - "/lost+found/"
  - "downloads/"
  - "appdata/"
  - "*.!sync"
  - ".AppleDouble"
  - "._AppleDouble"
  - ".DS_Store"
  - "._.DS_Store"
  - ".Thumbs.db"
  - ".fseventsd"
  - ".Spotlight-V100"
  - ".TemporaryItems"
  - ".Trashes"
  - ".AppleDB"

## telegraf
telegraf_plugins_base:
  - name: mem
  - name: system
  - name: cpu
    options:
      percpu: "true"
      totalcpu: "true"
      collect_cpu_time: "false"
      report_active: "false"
  - name: disk
    options:
      ignore_fs:
        - "tmpfs"
        - "devtmpfs"
        - "devfs"
      mountpoints:
        - "/"
        - "/mnt/disk1"
        - "/mnt/disk2"
        - "/mnt/parity1"
        - "/mnt/storage"
        - "/mnt/tank"
  - name: diskio
    options:
      skip_serial_number: "true"
  - name: kernel
  - name: processes
  - name: docker
    options:
      endpoint: "unix:///var/run/docker.sock"
      perdevice: "true"
  - name: hddtemp
  - name: net
    options:
      interfaces:
        - "eth0"
