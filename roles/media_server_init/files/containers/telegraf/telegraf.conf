# Telegraf configuration

# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared plugins.

# Even if a plugin has no configuration, it must be declared in here
# to be active. Declaring a plugin means just specifying the name
# as a section with no variables. To deactivate a plugin, comment
# out the name and any variables.

# Use 'telegraf -config telegraf.toml -test' to see what metrics a config
# file would generate.

# One rule that plugins conform to is wherever a connection string
# can be passed, the values '' and 'localhost' are treated specially.
# They indicate to the plugin to use their own builtin configuration to
# connect to the local system.

# NOTE: The configuration has a few required parameters. They are marked
# with 'required'. Be sure to edit those to make this configuration work.

# Tags can also be specified via a normal map, but only one form at a time:
[global_tags]

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at
  ## most metric_batch_size metrics.
  metric_batch_size = 1000
  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## Run telegraf in debug mode
  debug = false
  ## Run telegraf in quiet mode
  quiet = false

  # Override default hostname, if empty use os.Hostname()
  hostname = "mediaserver"

  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

###############################################################################
#                                  OUTPUTS                                    #
###############################################################################

[outputs]

# Configuration for influxdb server to send metrics to
# [[outputs.influxdb]]
#   # The full HTTP or UDP endpoint URL for your InfluxDB instance.
#   # Multiple urls can be specified but it is assumed that they are part of the same
#   # cluster, this means that only ONE of the urls will be written to each interval.
#   # urls = ["udp://localhost:8089"] # UDP endpoint example
#   urls = [ "http://influxdb:8086" ] # required
#   # The target database for metrics (telegraf will create it if not exists)
#   database = "telegraf" # required
#   username = "telegraf"
#   password = "ek3827FR3jjfe49932837EFfjesnv"
#   # Precision of writes, valid values are n, u, ms, s, m, and h
#   # note: using second precision greatly helps InfluxDB compression
#   precision = "s"

#   ## Retention policy to write to.
#   retention_policy = "autogen"
#   ## Write consistency (clusters only), can be: "any", "one", "quorom", "all"
#   write_consistency = "any"

#   # Connection timeout (for the connection with InfluxDB), formatted as a string.
#   # If not provided, will default to 0 (no timeout)
#   timeout = "5s"
#   # Set the user agent for HTTP POSTs (can be useful for log differentiation)
#   # Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)

#   ## Optional SSL Config
[[outputs.influxdb_v2]]
  # urls = ["http://influxdb:8086"]
  urls = ["http://localhost:8086"]
  # token = "$INFLUX_TOKEN"
  token = "l8YdvSMDon91jp-94Tw0HMv8_p1r_tE9mjhU2MpLeuujgGty6R7cIi5wCDqNfnFlqheSyP1fckRJUTEwlf9kQA=="
  organization = "baremetal"
  bucket = "telegraf"

###############################################################################
#                                  PLUGINS                                    #
###############################################################################

[[inputs.mem]]
[[inputs.system]]
[[inputs.cpu]]
    fielddrop = [ "time_*" ]
    totalcpu = true
    percpu = true
[[inputs.disk]]
    # mountpoints = [ "/storage","/merged/*" ]
    ignore_fs = ["overlay"]
[[inputs.hddtemp]]
  ## By default, telegraf gathers temps data from all disks detected by the
  ## hddtemp.
  ##
  ## Only collect temps from the selected disks.
  ##
  ## A * as the device name will return the temperature values of all disks.
  ##
  address = "192.168.1.2:7634"
  devices = ["*"]
[[inputs.smart]]
    use_sudo = true
    attributes = true
[[inputs.diskio]]
    skip_serial_number = false
    device_tags = ["ID_SERIAL_SHORT","ID_FS_TYPE","ID_WWN"]
[[inputs.procstat]]
    prefix = "influxdb"
    exe = "influxd"
[[inputs.net]]
    interfaces = [ "eth0" ]
[[inputs.swap]]
[[inputs.netstat]]
[[inputs.processes]]

###############################################################################
#                              service PLUGINS                                #
###############################################################################