---
  - hosts: mediaserver
    vars_files:
      - 'vars/vault.yaml'
    roles:
      - role: grog.package
        tags: 
          - docker
      - role: geerlingguy.docker
        tags:
          - docker
      - role: geerlingguy.pip
        tags:
          - docker
      - role: sprat.mergerfs
        tags:
          - disks
          - mergerfs
      - role: media_server_init
      - role: telegraf
        tags:
          - telegraf
      - role: andrewrothstein.go
        tags:
          - hdidle
      - role: geerlingguy.hdparm
        # vars:
        #   hdparm_manage_config: true
        #   hdparm_devices:
        #   - dev: /dev/sdn
        #     options:
        #       - "spindown_time = 120"
        tags: 
          - hdparm
      # - role: lifeofguenter.nut
      #   tags:
      #     - nut
      #   name: tripp
      #   nut_driver: usbhid-ups
      #   device: /dev/usb/hiddev0
      #   nut_desc: Tripp Lite 
      #   nut_vendorid: 09ae
      #   nut_productid: 3016

      # - role: rossmcdonald.telegraf
      #   tags:
      #     - telegraf
    tasks:
      - name: remove ubuntu motd spam
        become: true
        file:
          path: "/etc/update-motd.d/{{ item }}"
          state: absent
        loop:
          - 80-livepatch
          - 95-hwe-eol
          - 10-help-text
        when: ansible_distribution == 'Ubuntu'

      - name: copy over telegraf conf file
        copy:
          src: telegraf.conf
          dest: /etc/telegraf/telegraf.conf
          owner: telegraf
          group: telegraf
        tags:
          - telegraf

      - name: add telegraf user to docker group
        user:
          name: telegraf
          groups: docker
          append: yes
        tags:
          - telegraf

      - name: install hd-idle into go path
        command:
          cmd: go install github.com/adelolmo/hd-idle@latest
        tags:
          - hdidle

      - name: Gather mount facts
        ansible.builtin.setup:
          gather_subset:
            - mounts
        tags:
          - disks
          - check_mounts

      - name: Check disk mount status
        ansible.builtin.stat:
          path: "/mnt/{{ item.serial }}"
        register: mount_check
        loop: "{{ data_disks }}"
        tags:
          - disks
          - check_mounts

      - name: Report unmounted or missing disks
        ansible.builtin.debug:
          msg: "{{ '\033[91m[CRITICAL]\033[0m' }} Disk with serial {{ item.item.serial }} is not properly mounted at /mnt/{{ item.item.serial }}"
          verbosity: 0
        failed_when: true
        when: >
          not item.stat.exists or 
          ('/mnt/' + item.item.serial not in ansible_mounts | map(attribute='mount') | list)
        loop: "{{ mount_check.results }}"
        tags:
          - disks
          - check_mounts